program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "4.28.4"}, {"coremlc-version", "1436.100.10"}})]
{
    func main<ios15>(tensor<fp32, [1, 80, 3000]> logmel_data) {
            tensor<int32, []> var_16 = const()[name = tensor<string, []>("op_16"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> var_24 = const()[name = tensor<string, []>("op_24"), val = tensor<int32, [1]>([1])];
            tensor<int32, [1]> var_26 = const()[name = tensor<string, []>("op_26"), val = tensor<int32, [1]>([1])];
            tensor<string, []> var_28_pad_type_0 = const()[name = tensor<string, []>("op_28_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [2]> var_28_pad_0 = const()[name = tensor<string, []>("op_28_pad_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> logmel_data_to_fp16_dtype_0 = const()[name = tensor<string, []>("logmel_data_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [384, 80, 3]> weight_3_to_fp16 = const()[name = tensor<string, []>("weight_3_to_fp16"), val = tensor<fp16, [384, 80, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [384]> bias_3_to_fp16 = const()[name = tensor<string, []>("bias_3_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184448)))];
            tensor<fp16, [1, 80, 3000]> cast_127 = cast(dtype = logmel_data_to_fp16_dtype_0, x = logmel_data);
            tensor<fp16, [1, 384, 3000]> var_28_cast = conv(bias = bias_3_to_fp16, dilations = var_26, groups = var_16, pad = var_28_pad_0, pad_type = var_28_pad_type_0, strides = var_24, weight = weight_3_to_fp16, x = cast_127);
            tensor<string, []> input_1_mode_0 = const()[name = tensor<string, []>("input_1_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 384, 3000]> input_1_cast = gelu(mode = input_1_mode_0, x = var_28_cast);
            tensor<int32, []> var_32 = const()[name = tensor<string, []>("op_32"), val = tensor<int32, []>(1)];
            tensor<int32, [1]> var_41 = const()[name = tensor<string, []>("op_41"), val = tensor<int32, [1]>([2])];
            tensor<int32, [1]> var_43 = const()[name = tensor<string, []>("op_43"), val = tensor<int32, [1]>([1])];
            tensor<string, []> var_45_pad_type_0 = const()[name = tensor<string, []>("op_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [2]> var_45_pad_0 = const()[name = tensor<string, []>("op_45_pad_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [384, 384, 3]> weight_7_to_fp16 = const()[name = tensor<string, []>("weight_7_to_fp16"), val = tensor<fp16, [384, 384, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(185280)))];
            tensor<fp16, [384]> bias_7_to_fp16 = const()[name = tensor<string, []>("bias_7_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1070080)))];
            tensor<fp16, [1, 384, 1500]> var_45_cast = conv(bias = bias_7_to_fp16, dilations = var_43, groups = var_32, pad = var_45_pad_0, pad_type = var_45_pad_type_0, strides = var_41, weight = weight_7_to_fp16, x = input_1_cast);
            tensor<string, []> x_3_mode_0 = const()[name = tensor<string, []>("x_3_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 384, 1500]> x_3_cast = gelu(mode = x_3_mode_0, x = var_45_cast);
            tensor<int32, [3]> var_50 = const()[name = tensor<string, []>("op_50"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<fp16, [1500, 384]> positional_embedding_to_fp16 = const()[name = tensor<string, []>("positional_embedding_to_fp16"), val = tensor<fp16, [1500, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1070912)))];
            tensor<fp16, [1, 1500, 384]> transpose_32 = transpose(perm = var_50, x = x_3_cast);
            tensor<fp16, [1, 1500, 384]> var_53_cast = add(x = transpose_32, y = positional_embedding_to_fp16);
            tensor<int32, []> var_65 = const()[name = tensor<string, []>("op_65"), val = tensor<int32, []>(-1)];
            tensor<int32, [1]> var_82_axes_0 = const()[name = tensor<string, []>("op_82_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [384]> blocks_0_attn_ln_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_ln_weight_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2222976)))];
            tensor<fp16, [384]> blocks_0_attn_ln_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_attn_ln_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2223808)))];
            tensor<fp16, []> var_71_to_fp16 = const()[name = tensor<string, []>("op_71_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1500, 384]> var_82_cast = layer_norm(axes = var_82_axes_0, beta = blocks_0_attn_ln_bias_to_fp16, epsilon = var_71_to_fp16, gamma = blocks_0_attn_ln_weight_to_fp16, x = var_53_cast);
            tensor<fp16, [384, 384]> var_93_to_fp16 = const()[name = tensor<string, []>("op_93_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2224640)))];
            tensor<fp16, [384]> var_94_to_fp16 = const()[name = tensor<string, []>("op_94_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2519616)))];
            tensor<fp16, [1, 1500, 384]> q_1_cast = linear(bias = var_94_to_fp16, weight = var_93_to_fp16, x = var_82_cast);
            tensor<fp16, [384, 384]> var_97_to_fp16 = const()[name = tensor<string, []>("op_97_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2520448)))];
            tensor<fp16, [384]> k_1_bias_0_to_fp16 = const()[name = tensor<string, []>("k_1_bias_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2815424)))];
            tensor<fp16, [1, 1500, 384]> k_1_cast = linear(bias = k_1_bias_0_to_fp16, weight = var_97_to_fp16, x = var_82_cast);
            tensor<fp16, [384, 384]> var_101_to_fp16 = const()[name = tensor<string, []>("op_101_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2816256)))];
            tensor<fp16, [384]> var_102_to_fp16 = const()[name = tensor<string, []>("op_102_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3111232)))];
            tensor<fp16, [1, 1500, 384]> v_1_cast = linear(bias = var_102_to_fp16, weight = var_101_to_fp16, x = var_82_cast);
            tensor<int32, [4]> var_110 = const()[name = tensor<string, []>("op_110"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_111_cast = reshape(shape = var_110, x = q_1_cast);
            tensor<fp16, [1, 1, 1, 1]> const_28_to_fp16 = const()[name = tensor<string, []>("const_28_to_fp16"), val = tensor<fp16, [1, 1, 1, 1]>([[[[0x1.6ap-2]]]])];
            tensor<fp16, [1, 1500, 6, 64]> q_3_cast = mul(x = var_111_cast, y = const_28_to_fp16);
            tensor<int32, [4]> var_117 = const()[name = tensor<string, []>("op_117"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_118_cast = reshape(shape = var_117, x = k_1_cast);
            tensor<fp16, [1, 1, 1, 1]> const_29_to_fp16 = const()[name = tensor<string, []>("const_29_to_fp16"), val = tensor<fp16, [1, 1, 1, 1]>([[[[0x1.6ap-2]]]])];
            tensor<fp16, [1, 1500, 6, 64]> k_3_cast = mul(x = var_118_cast, y = const_29_to_fp16);
            tensor<int32, [4]> var_124 = const()[name = tensor<string, []>("op_124"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_125_cast = reshape(shape = var_124, x = v_1_cast);
            tensor<int32, [4]> var_126 = const()[name = tensor<string, []>("op_126"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<bool, []> qk_1_transpose_x_0 = const()[name = tensor<string, []>("qk_1_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> qk_1_transpose_y_0 = const()[name = tensor<string, []>("qk_1_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<int32, [4]> transpose_8_perm_0 = const()[name = tensor<string, []>("transpose_8_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [4]> transpose_9_perm_0 = const()[name = tensor<string, []>("transpose_9_perm_0"), val = tensor<int32, [4]>([0, 2, 3, 1])];
            tensor<fp16, [1, 6, 64, 1500]> transpose_29 = transpose(perm = transpose_9_perm_0, x = k_3_cast);
            tensor<fp16, [1, 6, 1500, 64]> transpose_30 = transpose(perm = transpose_8_perm_0, x = q_3_cast);
            tensor<fp16, [1, 6, 1500, 1500]> qk_1_cast = matmul(transpose_x = qk_1_transpose_x_0, transpose_y = qk_1_transpose_y_0, x = transpose_30, y = transpose_29);
            tensor<fp16, [1, 6, 1500, 1500]> var_130_cast = softmax(axis = var_65, x = qk_1_cast);
            tensor<bool, []> var_132_transpose_x_0 = const()[name = tensor<string, []>("op_132_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> var_132_transpose_y_0 = const()[name = tensor<string, []>("op_132_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1500, 64]> transpose_31 = transpose(perm = var_126, x = var_125_cast);
            tensor<fp16, [1, 6, 1500, 64]> var_132_cast = matmul(transpose_x = var_132_transpose_x_0, transpose_y = var_132_transpose_y_0, x = var_130_cast, y = transpose_31);
            tensor<int32, [4]> var_133 = const()[name = tensor<string, []>("op_133"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> concat_0 = const()[name = tensor<string, []>("concat_0"), val = tensor<int32, [3]>([1, 1500, 384])];
            tensor<fp16, [1, 1500, 6, 64]> transpose_28 = transpose(perm = var_133, x = var_132_cast);
            tensor<fp16, [1, 1500, 384]> x_11_cast = reshape(shape = concat_0, x = transpose_28);
            tensor<fp16, [384, 384]> var_138_to_fp16 = const()[name = tensor<string, []>("op_138_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112064)))];
            tensor<fp16, [384]> var_139_to_fp16 = const()[name = tensor<string, []>("op_139_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3407040)))];
            tensor<fp16, [1, 1500, 384]> var_140_cast = linear(bias = var_139_to_fp16, weight = var_138_to_fp16, x = x_11_cast);
            tensor<fp16, [1, 1500, 384]> x_13_cast = add(x = var_53_cast, y = var_140_cast);
            tensor<int32, [1]> var_146_axes_0 = const()[name = tensor<string, []>("op_146_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [384]> blocks_0_mlp_ln_weight_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_ln_weight_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3407872)))];
            tensor<fp16, [384]> blocks_0_mlp_ln_bias_to_fp16 = const()[name = tensor<string, []>("blocks_0_mlp_ln_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3408704)))];
            tensor<fp16, [1, 1500, 384]> var_146_cast = layer_norm(axes = var_146_axes_0, beta = blocks_0_mlp_ln_bias_to_fp16, epsilon = var_71_to_fp16, gamma = blocks_0_mlp_ln_weight_to_fp16, x = x_13_cast);
            tensor<fp16, [1536, 384]> var_155_to_fp16 = const()[name = tensor<string, []>("op_155_to_fp16"), val = tensor<fp16, [1536, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3409536)))];
            tensor<fp16, [1536]> var_156_to_fp16 = const()[name = tensor<string, []>("op_156_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4589248)))];
            tensor<fp16, [1, 1500, 1536]> input_9_cast = linear(bias = var_156_to_fp16, weight = var_155_to_fp16, x = var_146_cast);
            tensor<string, []> x_17_mode_0 = const()[name = tensor<string, []>("x_17_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1500, 1536]> x_17_cast = gelu(mode = x_17_mode_0, x = input_9_cast);
            tensor<fp16, [384, 1536]> var_161_to_fp16 = const()[name = tensor<string, []>("op_161_to_fp16"), val = tensor<fp16, [384, 1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4592384)))];
            tensor<fp16, [384]> var_162_to_fp16 = const()[name = tensor<string, []>("op_162_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5772096)))];
            tensor<fp16, [1, 1500, 384]> var_163_cast = linear(bias = var_162_to_fp16, weight = var_161_to_fp16, x = x_17_cast);
            tensor<fp16, [1, 1500, 384]> x_19_cast = add(x = x_13_cast, y = var_163_cast);
            tensor<int32, []> var_171 = const()[name = tensor<string, []>("op_171"), val = tensor<int32, []>(-1)];
            tensor<int32, [1]> var_188_axes_0 = const()[name = tensor<string, []>("op_188_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [384]> blocks_1_attn_ln_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_ln_weight_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5772928)))];
            tensor<fp16, [384]> blocks_1_attn_ln_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_attn_ln_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5773760)))];
            tensor<fp16, []> var_177_to_fp16 = const()[name = tensor<string, []>("op_177_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1500, 384]> var_188_cast = layer_norm(axes = var_188_axes_0, beta = blocks_1_attn_ln_bias_to_fp16, epsilon = var_177_to_fp16, gamma = blocks_1_attn_ln_weight_to_fp16, x = x_19_cast);
            tensor<fp16, [384, 384]> var_199_to_fp16 = const()[name = tensor<string, []>("op_199_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5774592)))];
            tensor<fp16, [384]> var_200_to_fp16 = const()[name = tensor<string, []>("op_200_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6069568)))];
            tensor<fp16, [1, 1500, 384]> q_5_cast = linear(bias = var_200_to_fp16, weight = var_199_to_fp16, x = var_188_cast);
            tensor<fp16, [384, 384]> var_203_to_fp16 = const()[name = tensor<string, []>("op_203_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6070400)))];
            tensor<fp16, [384]> k_5_bias_0_to_fp16 = const()[name = tensor<string, []>("k_5_bias_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6365376)))];
            tensor<fp16, [1, 1500, 384]> k_5_cast = linear(bias = k_5_bias_0_to_fp16, weight = var_203_to_fp16, x = var_188_cast);
            tensor<fp16, [384, 384]> var_207_to_fp16 = const()[name = tensor<string, []>("op_207_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6366208)))];
            tensor<fp16, [384]> var_208_to_fp16 = const()[name = tensor<string, []>("op_208_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6661184)))];
            tensor<fp16, [1, 1500, 384]> v_5_cast = linear(bias = var_208_to_fp16, weight = var_207_to_fp16, x = var_188_cast);
            tensor<int32, [4]> var_216 = const()[name = tensor<string, []>("op_216"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_217_cast = reshape(shape = var_216, x = q_5_cast);
            tensor<fp16, [1, 1, 1, 1]> const_30_to_fp16 = const()[name = tensor<string, []>("const_30_to_fp16"), val = tensor<fp16, [1, 1, 1, 1]>([[[[0x1.6ap-2]]]])];
            tensor<fp16, [1, 1500, 6, 64]> q_7_cast = mul(x = var_217_cast, y = const_30_to_fp16);
            tensor<int32, [4]> var_223 = const()[name = tensor<string, []>("op_223"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_224_cast = reshape(shape = var_223, x = k_5_cast);
            tensor<fp16, [1, 1, 1, 1]> const_31_to_fp16 = const()[name = tensor<string, []>("const_31_to_fp16"), val = tensor<fp16, [1, 1, 1, 1]>([[[[0x1.6ap-2]]]])];
            tensor<fp16, [1, 1500, 6, 64]> k_7_cast = mul(x = var_224_cast, y = const_31_to_fp16);
            tensor<int32, [4]> var_230 = const()[name = tensor<string, []>("op_230"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_231_cast = reshape(shape = var_230, x = v_5_cast);
            tensor<int32, [4]> var_232 = const()[name = tensor<string, []>("op_232"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<bool, []> qk_3_transpose_x_0 = const()[name = tensor<string, []>("qk_3_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> qk_3_transpose_y_0 = const()[name = tensor<string, []>("qk_3_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<int32, [4]> transpose_10_perm_0 = const()[name = tensor<string, []>("transpose_10_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [4]> transpose_11_perm_0 = const()[name = tensor<string, []>("transpose_11_perm_0"), val = tensor<int32, [4]>([0, 2, 3, 1])];
            tensor<fp16, [1, 6, 64, 1500]> transpose_25 = transpose(perm = transpose_11_perm_0, x = k_7_cast);
            tensor<fp16, [1, 6, 1500, 64]> transpose_26 = transpose(perm = transpose_10_perm_0, x = q_7_cast);
            tensor<fp16, [1, 6, 1500, 1500]> qk_3_cast = matmul(transpose_x = qk_3_transpose_x_0, transpose_y = qk_3_transpose_y_0, x = transpose_26, y = transpose_25);
            tensor<fp16, [1, 6, 1500, 1500]> var_236_cast = softmax(axis = var_171, x = qk_3_cast);
            tensor<bool, []> var_238_transpose_x_0 = const()[name = tensor<string, []>("op_238_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> var_238_transpose_y_0 = const()[name = tensor<string, []>("op_238_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1500, 64]> transpose_27 = transpose(perm = var_232, x = var_231_cast);
            tensor<fp16, [1, 6, 1500, 64]> var_238_cast = matmul(transpose_x = var_238_transpose_x_0, transpose_y = var_238_transpose_y_0, x = var_236_cast, y = transpose_27);
            tensor<int32, [4]> var_239 = const()[name = tensor<string, []>("op_239"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> concat_1 = const()[name = tensor<string, []>("concat_1"), val = tensor<int32, [3]>([1, 1500, 384])];
            tensor<fp16, [1, 1500, 6, 64]> transpose_24 = transpose(perm = var_239, x = var_238_cast);
            tensor<fp16, [1, 1500, 384]> x_23_cast = reshape(shape = concat_1, x = transpose_24);
            tensor<fp16, [384, 384]> var_244_to_fp16 = const()[name = tensor<string, []>("op_244_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6662016)))];
            tensor<fp16, [384]> var_245_to_fp16 = const()[name = tensor<string, []>("op_245_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6956992)))];
            tensor<fp16, [1, 1500, 384]> var_246_cast = linear(bias = var_245_to_fp16, weight = var_244_to_fp16, x = x_23_cast);
            tensor<fp16, [1, 1500, 384]> x_25_cast = add(x = x_19_cast, y = var_246_cast);
            tensor<int32, [1]> var_252_axes_0 = const()[name = tensor<string, []>("op_252_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [384]> blocks_1_mlp_ln_weight_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_ln_weight_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6957824)))];
            tensor<fp16, [384]> blocks_1_mlp_ln_bias_to_fp16 = const()[name = tensor<string, []>("blocks_1_mlp_ln_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6958656)))];
            tensor<fp16, [1, 1500, 384]> var_252_cast = layer_norm(axes = var_252_axes_0, beta = blocks_1_mlp_ln_bias_to_fp16, epsilon = var_177_to_fp16, gamma = blocks_1_mlp_ln_weight_to_fp16, x = x_25_cast);
            tensor<fp16, [1536, 384]> var_261_to_fp16 = const()[name = tensor<string, []>("op_261_to_fp16"), val = tensor<fp16, [1536, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6959488)))];
            tensor<fp16, [1536]> var_262_to_fp16 = const()[name = tensor<string, []>("op_262_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8139200)))];
            tensor<fp16, [1, 1500, 1536]> input_17_cast = linear(bias = var_262_to_fp16, weight = var_261_to_fp16, x = var_252_cast);
            tensor<string, []> x_29_mode_0 = const()[name = tensor<string, []>("x_29_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1500, 1536]> x_29_cast = gelu(mode = x_29_mode_0, x = input_17_cast);
            tensor<fp16, [384, 1536]> var_267_to_fp16 = const()[name = tensor<string, []>("op_267_to_fp16"), val = tensor<fp16, [384, 1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8142336)))];
            tensor<fp16, [384]> var_268_to_fp16 = const()[name = tensor<string, []>("op_268_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9322048)))];
            tensor<fp16, [1, 1500, 384]> var_269_cast = linear(bias = var_268_to_fp16, weight = var_267_to_fp16, x = x_29_cast);
            tensor<fp16, [1, 1500, 384]> x_31_cast = add(x = x_25_cast, y = var_269_cast);
            tensor<int32, []> var_277 = const()[name = tensor<string, []>("op_277"), val = tensor<int32, []>(-1)];
            tensor<int32, [1]> var_294_axes_0 = const()[name = tensor<string, []>("op_294_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [384]> blocks_2_attn_ln_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_ln_weight_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9322880)))];
            tensor<fp16, [384]> blocks_2_attn_ln_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_attn_ln_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9323712)))];
            tensor<fp16, []> var_283_to_fp16 = const()[name = tensor<string, []>("op_283_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1500, 384]> var_294_cast = layer_norm(axes = var_294_axes_0, beta = blocks_2_attn_ln_bias_to_fp16, epsilon = var_283_to_fp16, gamma = blocks_2_attn_ln_weight_to_fp16, x = x_31_cast);
            tensor<fp16, [384, 384]> var_305_to_fp16 = const()[name = tensor<string, []>("op_305_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9324544)))];
            tensor<fp16, [384]> var_306_to_fp16 = const()[name = tensor<string, []>("op_306_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9619520)))];
            tensor<fp16, [1, 1500, 384]> q_9_cast = linear(bias = var_306_to_fp16, weight = var_305_to_fp16, x = var_294_cast);
            tensor<fp16, [384, 384]> var_309_to_fp16 = const()[name = tensor<string, []>("op_309_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9620352)))];
            tensor<fp16, [384]> k_9_bias_0_to_fp16 = const()[name = tensor<string, []>("k_9_bias_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9915328)))];
            tensor<fp16, [1, 1500, 384]> k_9_cast = linear(bias = k_9_bias_0_to_fp16, weight = var_309_to_fp16, x = var_294_cast);
            tensor<fp16, [384, 384]> var_313_to_fp16 = const()[name = tensor<string, []>("op_313_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9916160)))];
            tensor<fp16, [384]> var_314_to_fp16 = const()[name = tensor<string, []>("op_314_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10211136)))];
            tensor<fp16, [1, 1500, 384]> v_9_cast = linear(bias = var_314_to_fp16, weight = var_313_to_fp16, x = var_294_cast);
            tensor<int32, [4]> var_322 = const()[name = tensor<string, []>("op_322"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_323_cast = reshape(shape = var_322, x = q_9_cast);
            tensor<fp16, [1, 1, 1, 1]> const_32_to_fp16 = const()[name = tensor<string, []>("const_32_to_fp16"), val = tensor<fp16, [1, 1, 1, 1]>([[[[0x1.6ap-2]]]])];
            tensor<fp16, [1, 1500, 6, 64]> q_11_cast = mul(x = var_323_cast, y = const_32_to_fp16);
            tensor<int32, [4]> var_329 = const()[name = tensor<string, []>("op_329"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_330_cast = reshape(shape = var_329, x = k_9_cast);
            tensor<fp16, [1, 1, 1, 1]> const_33_to_fp16 = const()[name = tensor<string, []>("const_33_to_fp16"), val = tensor<fp16, [1, 1, 1, 1]>([[[[0x1.6ap-2]]]])];
            tensor<fp16, [1, 1500, 6, 64]> k_11_cast = mul(x = var_330_cast, y = const_33_to_fp16);
            tensor<int32, [4]> var_336 = const()[name = tensor<string, []>("op_336"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_337_cast = reshape(shape = var_336, x = v_9_cast);
            tensor<int32, [4]> var_338 = const()[name = tensor<string, []>("op_338"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<bool, []> qk_5_transpose_x_0 = const()[name = tensor<string, []>("qk_5_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> qk_5_transpose_y_0 = const()[name = tensor<string, []>("qk_5_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<int32, [4]> transpose_12_perm_0 = const()[name = tensor<string, []>("transpose_12_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [4]> transpose_13_perm_0 = const()[name = tensor<string, []>("transpose_13_perm_0"), val = tensor<int32, [4]>([0, 2, 3, 1])];
            tensor<fp16, [1, 6, 64, 1500]> transpose_21 = transpose(perm = transpose_13_perm_0, x = k_11_cast);
            tensor<fp16, [1, 6, 1500, 64]> transpose_22 = transpose(perm = transpose_12_perm_0, x = q_11_cast);
            tensor<fp16, [1, 6, 1500, 1500]> qk_5_cast = matmul(transpose_x = qk_5_transpose_x_0, transpose_y = qk_5_transpose_y_0, x = transpose_22, y = transpose_21);
            tensor<fp16, [1, 6, 1500, 1500]> var_342_cast = softmax(axis = var_277, x = qk_5_cast);
            tensor<bool, []> var_344_transpose_x_0 = const()[name = tensor<string, []>("op_344_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> var_344_transpose_y_0 = const()[name = tensor<string, []>("op_344_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1500, 64]> transpose_23 = transpose(perm = var_338, x = var_337_cast);
            tensor<fp16, [1, 6, 1500, 64]> var_344_cast = matmul(transpose_x = var_344_transpose_x_0, transpose_y = var_344_transpose_y_0, x = var_342_cast, y = transpose_23);
            tensor<int32, [4]> var_345 = const()[name = tensor<string, []>("op_345"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> concat_2 = const()[name = tensor<string, []>("concat_2"), val = tensor<int32, [3]>([1, 1500, 384])];
            tensor<fp16, [1, 1500, 6, 64]> transpose_20 = transpose(perm = var_345, x = var_344_cast);
            tensor<fp16, [1, 1500, 384]> x_35_cast = reshape(shape = concat_2, x = transpose_20);
            tensor<fp16, [384, 384]> var_350_to_fp16 = const()[name = tensor<string, []>("op_350_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10211968)))];
            tensor<fp16, [384]> var_351_to_fp16 = const()[name = tensor<string, []>("op_351_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10506944)))];
            tensor<fp16, [1, 1500, 384]> var_352_cast = linear(bias = var_351_to_fp16, weight = var_350_to_fp16, x = x_35_cast);
            tensor<fp16, [1, 1500, 384]> x_37_cast = add(x = x_31_cast, y = var_352_cast);
            tensor<int32, [1]> var_358_axes_0 = const()[name = tensor<string, []>("op_358_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [384]> blocks_2_mlp_ln_weight_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_ln_weight_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10507776)))];
            tensor<fp16, [384]> blocks_2_mlp_ln_bias_to_fp16 = const()[name = tensor<string, []>("blocks_2_mlp_ln_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10508608)))];
            tensor<fp16, [1, 1500, 384]> var_358_cast = layer_norm(axes = var_358_axes_0, beta = blocks_2_mlp_ln_bias_to_fp16, epsilon = var_283_to_fp16, gamma = blocks_2_mlp_ln_weight_to_fp16, x = x_37_cast);
            tensor<fp16, [1536, 384]> var_367_to_fp16 = const()[name = tensor<string, []>("op_367_to_fp16"), val = tensor<fp16, [1536, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10509440)))];
            tensor<fp16, [1536]> var_368_to_fp16 = const()[name = tensor<string, []>("op_368_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11689152)))];
            tensor<fp16, [1, 1500, 1536]> input_25_cast = linear(bias = var_368_to_fp16, weight = var_367_to_fp16, x = var_358_cast);
            tensor<string, []> x_41_mode_0 = const()[name = tensor<string, []>("x_41_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1500, 1536]> x_41_cast = gelu(mode = x_41_mode_0, x = input_25_cast);
            tensor<fp16, [384, 1536]> var_373_to_fp16 = const()[name = tensor<string, []>("op_373_to_fp16"), val = tensor<fp16, [384, 1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11692288)))];
            tensor<fp16, [384]> var_374_to_fp16 = const()[name = tensor<string, []>("op_374_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12872000)))];
            tensor<fp16, [1, 1500, 384]> var_375_cast = linear(bias = var_374_to_fp16, weight = var_373_to_fp16, x = x_41_cast);
            tensor<fp16, [1, 1500, 384]> x_43_cast = add(x = x_37_cast, y = var_375_cast);
            tensor<int32, []> var_383 = const()[name = tensor<string, []>("op_383"), val = tensor<int32, []>(-1)];
            tensor<int32, [1]> var_400_axes_0 = const()[name = tensor<string, []>("op_400_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [384]> blocks_3_attn_ln_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_ln_weight_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12872832)))];
            tensor<fp16, [384]> blocks_3_attn_ln_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_attn_ln_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12873664)))];
            tensor<fp16, []> var_389_to_fp16 = const()[name = tensor<string, []>("op_389_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1500, 384]> var_400_cast = layer_norm(axes = var_400_axes_0, beta = blocks_3_attn_ln_bias_to_fp16, epsilon = var_389_to_fp16, gamma = blocks_3_attn_ln_weight_to_fp16, x = x_43_cast);
            tensor<fp16, [384, 384]> var_411_to_fp16 = const()[name = tensor<string, []>("op_411_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12874496)))];
            tensor<fp16, [384]> var_412_to_fp16 = const()[name = tensor<string, []>("op_412_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13169472)))];
            tensor<fp16, [1, 1500, 384]> q_13_cast = linear(bias = var_412_to_fp16, weight = var_411_to_fp16, x = var_400_cast);
            tensor<fp16, [384, 384]> var_415_to_fp16 = const()[name = tensor<string, []>("op_415_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13170304)))];
            tensor<fp16, [384]> k_13_bias_0_to_fp16 = const()[name = tensor<string, []>("k_13_bias_0_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13465280)))];
            tensor<fp16, [1, 1500, 384]> k_13_cast = linear(bias = k_13_bias_0_to_fp16, weight = var_415_to_fp16, x = var_400_cast);
            tensor<fp16, [384, 384]> var_419_to_fp16 = const()[name = tensor<string, []>("op_419_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13466112)))];
            tensor<fp16, [384]> var_420_to_fp16 = const()[name = tensor<string, []>("op_420_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13761088)))];
            tensor<fp16, [1, 1500, 384]> v_13_cast = linear(bias = var_420_to_fp16, weight = var_419_to_fp16, x = var_400_cast);
            tensor<int32, [4]> var_428 = const()[name = tensor<string, []>("op_428"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_429_cast = reshape(shape = var_428, x = q_13_cast);
            tensor<fp16, [1, 1, 1, 1]> const_34_to_fp16 = const()[name = tensor<string, []>("const_34_to_fp16"), val = tensor<fp16, [1, 1, 1, 1]>([[[[0x1.6ap-2]]]])];
            tensor<fp16, [1, 1500, 6, 64]> q_cast = mul(x = var_429_cast, y = const_34_to_fp16);
            tensor<int32, [4]> var_435 = const()[name = tensor<string, []>("op_435"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_436_cast = reshape(shape = var_435, x = k_13_cast);
            tensor<fp16, [1, 1, 1, 1]> const_35_to_fp16 = const()[name = tensor<string, []>("const_35_to_fp16"), val = tensor<fp16, [1, 1, 1, 1]>([[[[0x1.6ap-2]]]])];
            tensor<fp16, [1, 1500, 6, 64]> k_cast = mul(x = var_436_cast, y = const_35_to_fp16);
            tensor<int32, [4]> var_442 = const()[name = tensor<string, []>("op_442"), val = tensor<int32, [4]>([1, 1500, 6, -1])];
            tensor<fp16, [1, 1500, 6, 64]> var_443_cast = reshape(shape = var_442, x = v_13_cast);
            tensor<int32, [4]> var_444 = const()[name = tensor<string, []>("op_444"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<bool, []> qk_transpose_x_0 = const()[name = tensor<string, []>("qk_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> qk_transpose_y_0 = const()[name = tensor<string, []>("qk_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<int32, [4]> transpose_14_perm_0 = const()[name = tensor<string, []>("transpose_14_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [4]> transpose_15_perm_0 = const()[name = tensor<string, []>("transpose_15_perm_0"), val = tensor<int32, [4]>([0, 2, 3, 1])];
            tensor<fp16, [1, 6, 64, 1500]> transpose_17 = transpose(perm = transpose_15_perm_0, x = k_cast);
            tensor<fp16, [1, 6, 1500, 64]> transpose_18 = transpose(perm = transpose_14_perm_0, x = q_cast);
            tensor<fp16, [1, 6, 1500, 1500]> qk_cast = matmul(transpose_x = qk_transpose_x_0, transpose_y = qk_transpose_y_0, x = transpose_18, y = transpose_17);
            tensor<fp16, [1, 6, 1500, 1500]> var_448_cast = softmax(axis = var_383, x = qk_cast);
            tensor<bool, []> var_450_transpose_x_0 = const()[name = tensor<string, []>("op_450_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> var_450_transpose_y_0 = const()[name = tensor<string, []>("op_450_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 6, 1500, 64]> transpose_19 = transpose(perm = var_444, x = var_443_cast);
            tensor<fp16, [1, 6, 1500, 64]> var_450_cast = matmul(transpose_x = var_450_transpose_x_0, transpose_y = var_450_transpose_y_0, x = var_448_cast, y = transpose_19);
            tensor<int32, [4]> var_451 = const()[name = tensor<string, []>("op_451"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> concat_3 = const()[name = tensor<string, []>("concat_3"), val = tensor<int32, [3]>([1, 1500, 384])];
            tensor<fp16, [1, 1500, 6, 64]> transpose_16 = transpose(perm = var_451, x = var_450_cast);
            tensor<fp16, [1, 1500, 384]> x_47_cast = reshape(shape = concat_3, x = transpose_16);
            tensor<fp16, [384, 384]> var_456_to_fp16 = const()[name = tensor<string, []>("op_456_to_fp16"), val = tensor<fp16, [384, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13761920)))];
            tensor<fp16, [384]> var_457_to_fp16 = const()[name = tensor<string, []>("op_457_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14056896)))];
            tensor<fp16, [1, 1500, 384]> var_458_cast = linear(bias = var_457_to_fp16, weight = var_456_to_fp16, x = x_47_cast);
            tensor<fp16, [1, 1500, 384]> x_49_cast = add(x = x_43_cast, y = var_458_cast);
            tensor<int32, [1]> var_464_axes_0 = const()[name = tensor<string, []>("op_464_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [384]> blocks_3_mlp_ln_weight_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_ln_weight_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14057728)))];
            tensor<fp16, [384]> blocks_3_mlp_ln_bias_to_fp16 = const()[name = tensor<string, []>("blocks_3_mlp_ln_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14058560)))];
            tensor<fp16, [1, 1500, 384]> var_464_cast = layer_norm(axes = var_464_axes_0, beta = blocks_3_mlp_ln_bias_to_fp16, epsilon = var_389_to_fp16, gamma = blocks_3_mlp_ln_weight_to_fp16, x = x_49_cast);
            tensor<fp16, [1536, 384]> var_473_to_fp16 = const()[name = tensor<string, []>("op_473_to_fp16"), val = tensor<fp16, [1536, 384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14059392)))];
            tensor<fp16, [1536]> var_474_to_fp16 = const()[name = tensor<string, []>("op_474_to_fp16"), val = tensor<fp16, [1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15239104)))];
            tensor<fp16, [1, 1500, 1536]> input_33_cast = linear(bias = var_474_to_fp16, weight = var_473_to_fp16, x = var_464_cast);
            tensor<string, []> x_53_mode_0 = const()[name = tensor<string, []>("x_53_mode_0"), val = tensor<string, []>("EXACT")];
            tensor<fp16, [1, 1500, 1536]> x_53_cast = gelu(mode = x_53_mode_0, x = input_33_cast);
            tensor<fp16, [384, 1536]> var_479_to_fp16 = const()[name = tensor<string, []>("op_479_to_fp16"), val = tensor<fp16, [384, 1536]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(15242240)))];
            tensor<fp16, [384]> var_480_to_fp16 = const()[name = tensor<string, []>("op_480_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16421952)))];
            tensor<fp16, [1, 1500, 384]> var_481_cast = linear(bias = var_480_to_fp16, weight = var_479_to_fp16, x = x_53_cast);
            tensor<fp16, [1, 1500, 384]> x_cast = add(x = x_49_cast, y = var_481_cast);
            tensor<int32, [1]> var_494_axes_0 = const()[name = tensor<string, []>("op_494_axes_0"), val = tensor<int32, [1]>([-1])];
            tensor<fp16, [384]> ln_post_weight_to_fp16 = const()[name = tensor<string, []>("ln_post_weight_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16422784)))];
            tensor<fp16, [384]> ln_post_bias_to_fp16 = const()[name = tensor<string, []>("ln_post_bias_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16423616)))];
            tensor<fp16, []> var_485_to_fp16 = const()[name = tensor<string, []>("op_485_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 1500, 384]> var_494_cast = layer_norm(axes = var_494_axes_0, beta = ln_post_bias_to_fp16, epsilon = var_485_to_fp16, gamma = ln_post_weight_to_fp16, x = x_cast);
            tensor<string, []> var_494_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_494_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 1500, 384]> output = cast(dtype = var_494_cast_to_fp32_dtype_0, x = var_494_cast);
        } -> (output);
}